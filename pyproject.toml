# video_analysis_project/pyproject.toml

[project]
name = "videoqa"  # Changed to match our package name
version = "0.1.0"
description = "A suite of tools for intelligent video chat and search system, starting with ingestion."
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"  # Changed to SPDX format

authors = [
  {name = "Mahantesh", email = "mahanteshemails@gmail.com"},
]
maintainers = [
  {name = "Mahantesh", email = "mahanteshemails@gmail.com"},
]

keywords = ["video processing", "ffmpeg", "moviepy", "whisper", "multimodal", "ai", "nlp"]

dependencies = [
    "ffmpeg-python==0.2.0",
    "moviepy==1.0.3",
    "openai-whisper==20231117", # Pinning to a version for stability
    "Pillow>=9.0.0", # Often a dependency for moviepy, good to specify
    # Whisper might require 'torch' and 'torchaudio'. 
    # If not installed as part of whisper, you might need to add them.
    # For CPU-only:
    "torch",
    "torchaudio",
    # For GPU (CUDA):
    # "torch --index-url https://download.pytorch.org/whl/cu118" # Example for CUDA 11.8
    # "torchaudio --index-url https://download.pytorch.org/whl/cu118"
    # Check Whisper's documentation for specific torch version recommendations.
    # As of recent Whisper versions, torch is usually pulled in as a dependency.
    "scenedetect[opencv]==0.6.3", # PySceneDetect with OpenCV backend
    "torch>=2.0.0",              # For CLIP and SentenceTransformers
    "torchvision>=0.15.0",         # For CLIP
    "torchaudio>=2.0.0",         # For potential audio processing, librosa needs it too
    "transformers>=4.30.0",      # For CLIP models if accessed via Hugging Face
    "sentence-transformers>=2.2.0",
    "openai-clip>=1.0.1",        # Official OpenAI CLIP package
    "librosa>=0.10.0",           # For initial audio feature extraction
    "numpy>=1.23.0",             # Often a core dependency
]

[project.urls]
Homepage = "https://github.com/yourusername/video-analysis-suite" # Example
Repository = "https://github.com/yourusername/video-analysis-suite" # Example

# This section helps Python find your package if you install it
[tool.setuptools]
packages = ["videoqa"]
package-dir = {"" = "src"}

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"